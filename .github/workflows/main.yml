name: Build LibXray for Android and iOS

on:
  push:
    branches: [ main, develop ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-android:
    name: Build Android
    runs-on: ubuntu-latest
    steps:
    - name: Checkout libXray
      uses: actions/checkout@v4
      with:
        path: libXray

    - name: Checkout Xray-core
      uses: actions/checkout@v4
      with:
        repository: XTLS/Xray-core
        path: Xray-core

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache-dependency-path: |
          libXray/go.sum
          Xray-core/go.sum

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Java JDK
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Install Android NDK r27 LTS
      run: |
        sdkmanager "ndk;27.3.13750724"
        echo "ANDROID_NDK_ROOT=${ANDROID_SDK_ROOT}/ndk/27.3.13750724" >> $GITHUB_ENV

    - name: Install gomobile
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        gomobile init

    - name: Build Android
      working-directory: libXray
      run: |
        python3 build/main.py android

    - name: Upload Android artifacts
      uses: actions/upload-artifact@v4
      with:
        name: libxray-android
        path: |
          libXray/*.aar
          libXray/*.jar

  build-ios:
    name: Build iOS
    runs-on: macos-14
    strategy:
      matrix:
        build-type: ['gomobile', 'go']
    steps:
    - name: Checkout libXray
      uses: actions/checkout@v4
      with:
        path: libXray

    - name: Checkout Xray-core
      uses: actions/checkout@v4
      with:
        repository: XTLS/Xray-core
        path: Xray-core

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'
        cache-dependency-path: |
          libXray/go.sum
          Xray-core/go.sum

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Set up Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Install iOS Simulator Runtime
      run: |
        sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
        xcodebuild -downloadPlatform iOS

    - name: Install tvOS Simulator Runtime (for go build)
      if: matrix.build-type == 'go'
      run: |
        xcodebuild -downloadPlatform tvOS

    - name: Install gomobile
      if: matrix.build-type == 'gomobile'
      run: |
        go install golang.org/x/mobile/cmd/gomobile@latest
        gomobile init

    - name: Build iOS with gomobile
      if: matrix.build-type == 'gomobile'
      working-directory: libXray
      run: |
        python3 build/main.py apple gomobile

    - name: Build iOS with go
      if: matrix.build-type == 'go'
      working-directory: libXray
      run: |
        python3 build/main.py apple go

    - name: Upload iOS artifacts (gomobile)
      if: matrix.build-type == 'gomobile'
      uses: actions/upload-artifact@v4
      with:
        name: libxray-ios-gomobile
        path: |
          libXray/*.framework
          libXray/*.xcframework

    - name: Upload iOS artifacts (go)
      if: matrix.build-type == 'go'
      uses: actions/upload-artifact@v4
      with:
        name: libxray-ios-go
        path: |
          libXray/*.xcframework
          libXray/*.h

  create-release:
    name: Create Release
    needs: [build-android, build-ios]
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4

    - name: Display structure of downloaded files
      run: ls -R

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          libxray-android/*
          libxray-ios-gomobile/*
          libxray-ios-go/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  test-build:
    name: Test Build Process
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - name: Checkout libXray
      uses: actions/checkout@v4
      with:
        path: libXray

    - name: Checkout Xray-core
      uses: actions/checkout@v4
      with:
        repository: XTLS/Xray-core
        path: Xray-core

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Verify build script
      working-directory: libXray
      run: |
        python3 -c "import build.main; print('Build script syntax OK')"

    - name: Check dependencies
      working-directory: libXray
      run: |
        go mod download
        go mod verify

    - name: Run tests (if any)
      working-directory: libXray
      run: |
        if [ -f "go.mod" ]; then
          go test ./... || echo "No tests found or tests failed"
        fi
